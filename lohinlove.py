# --- Веб-часть, необходимая для Render ---
from flask import Flask
from threading import Thread

app = Flask('')


@app.route('/')
def home():
    return "Bot is alive and running!"


def run_web_server():
    # Запускаем веб-сервер на порту, который укажет Render
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 8080)))


def keep_alive():
    t = Thread(target=run_web_server)
    t.start()


# --- Конец веб-части ---


# --- Ваш основной код бота ---
import os
import logging
import random
from datetime import time
from telegram.ext import Application, CommandHandler, PicklePersistence

# Токен будет браться из переменных окружения на Render
BOT_TOKEN = os.environ.get('BOT_TOKEN')

# --- ВСТАВЬТЕ СЮДА ВАШИ ПОЛНЫЕ СПИСКИ СООБЩЕНИЙ (все 80 штук) ---
MORNING_MESSAGES = [
    "Доброе утро, моё солнышко! Пусть твой день будет таким же ярким, как твоя улыбка.",
    "Просыпайся, соня! Мир ждёт твою красоту. Хорошего дня, любимая.",
    "Надеюсь, ты выспалась, моя радость. Пусть утро будет нежным, а день — прекрасным.",
    "Доброе утро! Ты первое, о чём я думаю, когда просыпаюсь. Люблю тебя.",
    "Утро стало добрым, потому что в мире есть ты. Отличного тебе дня!",
    "Пусть чашечка кофе взбодрит тебя, а мои слова напомнят, как сильно я тебя люблю. Доброе утро!",
    "Привет, моё счастье! Желаю тебе самого волшебного и продуктивного дня.",
    "Просыпайся, моя королева! Твои великие дела ждут. А я жду вечера, чтобы поговорить с тобой.",
    "Доброе утро! Даже солнце светит ярче, зная, что сегодня оно увидит тебя.",
    "Желаю тебе утра, наполненного только приятными моментами и предвкушением чудесного дня.",
    "Пусть твой день начнётся с улыбки, а я постараюсь, чтобы она не сходила с твоего лица. Доброе утро!",
    "Утро — это ещё один повод сказать тебе, как ты прекрасна. Хорошего дня, любовь моя.",
    "Открывай глазки и готовься к новому чудесному дню! Мысленно целую и обнимаю.",
    "Надеюсь, тебе приснились самые сладкие сны. А теперь пора делать явь ещё слаще. Доброе утро!",
    "Самой прекрасной девушке на свете — самого доброго утра! Улыбнись!",
    "Пусть этот день принесёт тебе столько же радости, сколько ты приносишь в мою жизнь. Доброе утро!",
    "Утро — моё любимое время, потому что я знаю, что ты проснулась и мир стал лучше.",
    "Привет, лучик света! Пусть твой день будет лёгким и полным приятных сюрпризов.",
    "Доброе утро, любимая. Помни, что ты можешь всё, и даже больше!",
    "Хочу, чтобы твоё утро было таким же нежным и тёплым, как твои объятия. Люблю тебя.",
    # ... и остальные 19 утренних комплиментов
]
DAY_MESSAGES = [
    "Просто хотел напомнить, что ты невероятная. Надеюсь, твой день проходит хорошо!",
    "Думаю о тебе и улыбаюсь. Спасибо, что ты есть в моей жизни.",
    "Ты — мой лучик света даже в самый пасмурный день. ",
    "Надеюсь, ты не слишком устала. Помни, что вечером тебя ждёт отдых и мои объятия.",
    "У тебя всё получится! Я верю в тебя больше, чем в кого-либо.",
    "Каждый раз, когда я думаю о тебе, мой день становится лучше. ",
    "Твоя улыбка могла бы остановить войны. Она точно остановила мой мир и заставила его вращаться вокруг тебя.",
    "Ты сочетаешь в себе нежность и невероятную силу. Это восхищает.",
    "Даже не представляю, как можно быть такой очаровательной. Это твой врождённый талант?",
    "С тобой даже самые обычные вещи становятся особенными.",
    "Ты вдохновляешь меня быть лучше. Спасибо тебе за это.",
    "Интересно, ты вообще знаешь, насколько ты потрясающая?",
    "Если бы мне нужно было описать тебя одним словом, я бы растерялся. Ты — целая вселенная.",
    "Надеюсь, ты улыбнулась сегодня. Если нет, то вот знак!",
    "Твоё чувство юмора — это что-то невероятное. Обожаю твой смех.",
    "Ты такая умная и проницательная. Люблю разговаривать с тобой обо всём на свете.",
    "Просто напоминание: ты самая лучшая.",
    "Каждый день с тобой — это подарок. Ценю каждый момент.",
    "Твои глаза — это два бездонных океана, в которых я готов утонуть.",
    "В тебе столько энергии и света, что ты могла бы заряжать целые города.",
    "Как проходит твой день, моё сокровище? Шлю тебе заряд позитива!",
    "Ты красива не только снаружи, но и внутри. Твоя душа прекрасна.",
    "Спасибо за то, что делаешь мою жизнь такой яркой и полной смысла.",
    "Мне так повезло, что из всех людей в мире я встретил именно тебя.",
    "Даже не сомневайся в себе ни на секунду. Ты способна на великие вещи.",
    "Просто знай, что кто-то очень сильно по тебе скучает прямо сейчас.",
    "Ты — идеальное сочетание красоты, ума и доброты.",
    "С нетерпением жду нашей встречи!",
    "Твоя поддержка для меня — самое ценное. Спасибо, что ты всегда рядом.",
    "Надеюсь, у тебя есть минутка, чтобы отдохнуть и выпить чаю. Ты это заслужила.",
    "Ты приносишь в мою жизнь гармонию и спокойствие.",
    "Обожаю твой стиль. У тебя безупречный вкус во всём.",
    "Каждый твой жест, каждое слово — всё в тебе идеально.",
    "Рядом с тобой я чувствую себя самым счастливым человеком на свете.",
    "Захотелось просто так сказать, что ты очень важна для меня.",
    "Ты — настоящее чудо. Моё личное, самое любимое чудо.",
    "Пусть остаток дня будет лёгким и приятным!",
    "Посылаю тебе виртуальные обнимашки!  крепкие-крепкие.",
    "Ты даже не представляешь, как часто я думаю о тебе в течение дня.",
    "Просто напоминаю, что ты со всем справишься. Я рядом.",
    # ... и остальные 39 дневных комплиментов
]
EVENING_MESSAGES = [
    "Надеюсь, твой день был хорошим. Пора отдыхать, моя принцесса. Сладких снов.",
"Пусть все заботы останутся в прошлом дне. А ночь принесёт тебе покой и самые волшебные сны.",
"Спокойной ночи, моя любовь. Спасибо за ещё один прекрасный день, который был в моей жизни благодаря тебе.",
"Засыпай, моё счастье. Пусть тебе приснится что-то такое же прекрасное, как ты сама.",
"Даже когда ты спишь, я знаю, что ты — самое прекрасное создание во вселенной. Сладких снов.",
"Хочу, чтобы ты знала: засыпая, я думаю о тебе, и просыпаясь — тоже. Спокойной ночи.",
"Отдыхай, моя хорошая. Ты сегодня много сделала и заслужила самый лучший отдых.",
"Пусть ночь укроет тебя своим тёплым одеялом и подарит сладкие сны. Люблю тебя.",
"Спокойной ночи, звёздочка моя. Ты сияешь ярче всех звёзд на небе.",
"Закрывай глазки и ни о чём не беспокойся. Я мысленно рядом, обнимаю тебя.",
"День заканчивается, а моя любовь к тебе — никогда. Сладких снов, любимая.",
"Пусть тебе приснятся наши самые счастливые моменты. Спокойной ночи.",
"Желаю тебе самой спокойной и тихой ночи. Набирайся сил, они тебе завтра пригодятся.",
"Ты — последняя моя мысль перед сном и первая после. Сладких снов, моя радость.",
"Спокойной ночи. Пусть ангелы охраняют твой сон.",
"Надеюсь, твой вечер был уютным. А ночь будет ещё лучше. Целую.",
"Смотря на луну, я думаю о том, что она светит и тебе. Спокойной ночи, моя вселенная.",
"Самых нежных и сказочных снов тебе, моя королева.",
"День был бы неполным без пожелания тебе спокойной ночи. Спи сладко.",
"Люблю тебя до луны и обратно. Спокойной ночи, моё сокровище.",
    # ... и остальные 19 вечерних комплиментов
]

logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)


async def send_message_job(context):
    job_context = context.job.data;
    message_type = job_context["type"];
    master_list = job_context["list"];
    bot_data = context.bot_data;
    chat_id = bot_data.get("chat_id")
    if not chat_id: return
    message_list_key = f"{message_type}_messages"
    if not bot_data.get(message_list_key): bot_data[message_list_key] = master_list.copy(); random.shuffle(
        bot_data[message_list_key])
    message = bot_data[message_list_key].pop()
    await context.bot.send_message(chat_id=chat_id, text=message)
    logger.info(f"Отправлено '{message_type}' сообщение в чат {chat_id}")


async def start(update, context):
    chat_id = update.effective_chat.id;
    user_name = update.effective_user.first_name;
    context.bot_data["chat_id"] = chat_id
    await update.message.reply_text(f"Привет, {user_name}! ❤️\nЯ буду каждый день присылать приятные сообщения.")
    current_jobs = context.job_queue.get_jobs_by_name(str(chat_id))
    if not current_jobs:
        # Указываем время по UTC (стандарт для серверов)
        context.job_queue.run_daily(send_message_job, time=time(hour=4, minute=30),
                                    data={"type": "morning", "list": MORNING_MESSAGES},
                                    name=str(chat_id))  # 7:30 по вашему времени (UTC+3)
        context.job_queue.run_daily(send_message_job, time=time(hour=11, minute=0),
                                    data={"type": "day", "list": DAY_MESSAGES},
                                    name=str(chat_id))  # 14:00 по вашему времени (UTC+3)
        context.job_queue.run_daily(send_message_job, time=time(hour=20, minute=15),
                                    data={"type": "evening", "list": EVENING_MESSAGES},
                                    name=str(chat_id))  # 23:15 по вашему времени (UTC+3)
    if "day_messages" not in context.bot_data: context.bot_data["day_messages"] = DAY_MESSAGES.copy(); random.shuffle(
        context.bot_data["day_messages"])
    first_message = context.bot_data["day_messages"].pop()
    await context.bot.send_message(chat_id=chat_id, text=first_message)


def main():
    if not BOT_TOKEN:
        print("Ошибка: Токен не найден. Убедитесь, что вы создали переменную окружения BOT_TOKEN.")
        return

    # Render не поддерживает сохранение файлов, поэтому память бота отключаем
    # persistence = PicklePersistence(filepath="bot_persistence")
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))

    # Запускаем веб-сервер в отдельном потоке
    keep_alive()

    print("Бот успешно запущен...")
    application.run_polling()


if __name__ == "__main__":
    main()